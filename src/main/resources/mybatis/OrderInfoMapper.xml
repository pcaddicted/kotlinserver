<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.kotlinserver.dao.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.kotlinserver.model.OrderInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="ship_id" jdbcType="INTEGER" property="shipId" />
    <result column="total_price" jdbcType="INTEGER" property="totalPrice" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, pay_type, ship_id, total_price, order_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.kotlinserver.model.OrderInfo">
    insert into order_info (id, user_id, pay_type, 
      ship_id, total_price, order_status
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{payType,jdbcType=INTEGER}, 
      #{shipId,jdbcType=INTEGER}, #{totalPrice,jdbcType=INTEGER}, #{orderStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.kotlinserver.model.OrderInfo">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="shipId != null">
        ship_id,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="shipId != null">
        #{shipId,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.kotlinserver.model.OrderInfo">
    update order_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="shipId != null">
        ship_id = #{shipId,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.kotlinserver.model.OrderInfo">
    update order_info
    set user_id = #{userId,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      ship_id = #{shipId,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=INTEGER},
      order_status = #{orderStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>