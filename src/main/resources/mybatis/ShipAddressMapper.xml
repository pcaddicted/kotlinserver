<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.kotlinserver.dao.ShipAddressMapper">
  <resultMap id="BaseResultMap" type="com.example.kotlinserver.model.ShipAddress">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ship_user_name" jdbcType="VARCHAR" property="shipUserName" />
    <result column="ship_user_mobile" jdbcType="VARCHAR" property="shipUserMobile" />
    <result column="ship_address" jdbcType="VARCHAR" property="shipAddress" />
    <result column="ship_is_default" jdbcType="INTEGER" property="shipIsDefault" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, ship_user_name, ship_user_mobile, ship_address, ship_is_default, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ship_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectShipAddressByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ship_address
    where user_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ship_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.kotlinserver.model.ShipAddress">
    insert into ship_address (id, ship_user_name, ship_user_mobile, 
      ship_address, ship_is_default, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{shipUserName,jdbcType=VARCHAR}, #{shipUserMobile,jdbcType=VARCHAR}, 
      #{shipAddress,jdbcType=VARCHAR}, #{shipIsDefault,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>

  
  <insert id="insertSelective" parameterType="com.example.kotlinserver.model.ShipAddress">
    insert into ship_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shipUserName != null">
        ship_user_name,
      </if>
      <if test="shipUserMobile != null">
        ship_user_mobile,
      </if>
      <if test="shipAddress != null">
        ship_address,
      </if>
      <if test="shipIsDefault != null">
        ship_is_default,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shipUserName != null">
        #{shipUserName,jdbcType=VARCHAR},
      </if>
      <if test="shipUserMobile != null">
        #{shipUserMobile,jdbcType=VARCHAR},
      </if>
      <if test="shipAddress != null">
        #{shipAddress,jdbcType=VARCHAR},
      </if>
      <if test="shipIsDefault != null">
        #{shipIsDefault,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.kotlinserver.model.ShipAddress">
    update ship_address
    <set>
      <if test="shipUserName != null">
        ship_user_name = #{shipUserName,jdbcType=VARCHAR},
      </if>
      <if test="shipUserMobile != null">
        ship_user_mobile = #{shipUserMobile,jdbcType=VARCHAR},
      </if>
      <if test="shipAddress != null">
        ship_address = #{shipAddress,jdbcType=VARCHAR},
      </if>
      <if test="shipIsDefault != null">
        ship_is_default = #{shipIsDefault,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.kotlinserver.model.ShipAddress">
    update ship_address
    set ship_user_name = #{shipUserName,jdbcType=VARCHAR},
      ship_user_mobile = #{shipUserMobile,jdbcType=VARCHAR},
      ship_address = #{shipAddress,jdbcType=VARCHAR},
      ship_is_default = #{shipIsDefault,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>